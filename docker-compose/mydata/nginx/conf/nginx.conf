
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # 1、设置代理缓存
    # 设置代理缓存（这里设置/usr/share/nginx/html是为了进行映射到对应的目录）
    proxy_cache_path /usr/share/nginx/html/to_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m; 

    # 2、开启gzip压缩
    # 是否启动gzip压缩,on代表启动,off代表开启，方便文件与请求数据传输
    gzip  on;
    # 启用gzip压缩的最小文件，小于该设置值的文件不会压缩
    gzip_min_length  10k;
    # 是否在http header中添加Vary: Accept-Encoding,建议开启
    gzip_vary on;
    #压缩的等级,数字选择范围是1-9,数字越小压缩的速度越快,消耗cpu就越大
    gzip_comp_level 2;
    # 进行压缩的文件类型。javascript有多种形式，对应值根据mime.types文件中找
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml application/json;

    include /etc/nginx/conf.d/*.conf;
}
